[1/10] Performing build step for 'bootloader'
[1/1] cd /home/thefee/esp-idf/esp32-http-relay/build/bootloader/esp-idf/esptool_py && /home/thefee/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/thefee/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/thefee/esp-idf/esp32-http-relay/build/bootloader/bootloader.bin
Bootloader binary size 0x6820 bytes. 0x7e0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lora_TX.c.obj
/home/thefee/esp-idf/esp32-http-relay/main/lora_TX.c:2928:22: warning: 'rx_queue' defined but not used [-Wunused-variable]
 2928 | static QueueHandle_t rx_queue;  // Queue để push RX data nếu cần (optional)
      |                      ^~~~~~~~
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable esp32-http-relay.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/thefee/esp-idf/esp32-http-relay/build/esp32-http-relay.bin
[7/8] cd /home/thefee/esp-idf/esp32-http-relay/build/esp-idf/esptool_py && /home/thefee/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/thefee/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/thefee/esp-idf/esp32-http-relay/build/partition_table/partition-table.bin /home/thefee/esp-idf/esp32-http-relay/build/esp32-http-relay.bin
esp32-http-relay.bin binary size 0x39e60 bytes. Smallest app partition is 0x100000 bytes. 0xc61a0 bytes (77%) free.
[7/8] cd /home/thefee/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/thefee/esp-idf -D "SERIAL_TOOL=/home/thefee/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/home/thefee/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/thefee/esp-idf/esp32-http-relay/build -P /home/thefee/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 esp32-http-relay.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: fc:b4:67:78:be:cc
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00049fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26656 bytes to 16708...
Writing at 0x00001000... (50 %)
Writing at 0x00007685... (100 %)
Wrote 26656 bytes (16708 compressed) at 0x00001000 in 0.6 seconds (effective 332.4 kbit/s)...
Hash of data verified.
Compressed 237152 bytes to 133560...
Writing at 0x00010000... (11 %)
Writing at 0x0001c732... (22 %)
Writing at 0x000240b5... (33 %)
Writing at 0x00029d74... (44 %)
Writing at 0x0002f51c... (55 %)
Writing at 0x0003564f... (66 %)
Writing at 0x0003d571... (77 %)
Writing at 0x00043018... (88 %)
Writing at 0x00048e43... (100 %)
Wrote 237152 bytes (133560 compressed) at 0x00010000 in 3.1 seconds (effective 602.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 690.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
