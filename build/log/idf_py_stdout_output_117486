[1/10] Performing build step for 'bootloader'
[1/1] cd /home/thefee/esp-idf/esp32-http-relay/build/bootloader/esp-idf/esptool_py && /home/thefee/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/thefee/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/thefee/esp-idf/esp32-http-relay/build/bootloader/bootloader.bin
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lora_TX.c.obj
/home/thefee/esp-idf/esp32-http-relay/main/lora_TX.c: In function 'lora_send_packet':
/home/thefee/esp-idf/esp32-http-relay/main/lora_TX.c:92:25: warning: comparison is always false due to limited range of data type [-Wtype-limits]
   92 |     if (sequence_number > 255) sequence_number = 0;
      |                         ^
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable esp32-http-relay.elf
[6/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/thefee/esp-idf/esp32-http-relay/build/esp32-http-relay.bin
[7/8] cd /home/thefee/esp-idf/esp32-http-relay/build/esp-idf/esptool_py && /home/thefee/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/thefee/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/thefee/esp-idf/esp32-http-relay/build/partition_table/partition-table.bin /home/thefee/esp-idf/esp32-http-relay/build/esp32-http-relay.bin
esp32-http-relay.bin binary size 0x30950 bytes. Smallest app partition is 0x100000 bytes. 0xcf6b0 bytes (81%) free.
[7/8] cd /home/thefee/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/thefee/esp-idf -D "SERIAL_TOOL=/home/thefee/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/home/thefee/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/thefee/esp-idf/esp32-http-relay/build -P /home/thefee/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 esp32-http-relay.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0

A fatal error occurred: Could not open /dev/ttyUSB0, the port is busy or doesn't exist.
([Errno 2] could not open port /dev/ttyUSB0: [Errno 2] No such file or directory: '/dev/ttyUSB0')

Hint: Check if the port is correct and ESP connected

FAILED: CMakeFiles/flash /home/thefee/esp-idf/esp32-http-relay/build/CMakeFiles/flash 
cd /home/thefee/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/thefee/esp-idf -D "SERIAL_TOOL=/home/thefee/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/home/thefee/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/thefee/esp-idf/esp32-http-relay/build -P /home/thefee/esp-idf/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
